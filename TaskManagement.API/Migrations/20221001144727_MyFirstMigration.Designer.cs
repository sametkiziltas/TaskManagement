// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskManagement.API.DataLayer;

#nullable disable

namespace TaskManagement.API.Migrations
{
    [DbContext(typeof(TMContext))]
    [Migration("20221001144727_MyFirstMigration")]
    partial class MyFirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.1.22426.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("TaskManagement.API.DataLayer.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CommentDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CommentType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ReminderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("TMTaskId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TMTaskId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("TaskManagement.API.DataLayer.Entities.TMTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AssignedTo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NextActionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StatusOfTask")
                        .HasColumnType("integer");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeOfTask")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskManagement.API.DataLayer.Entities.Comment", b =>
                {
                    b.HasOne("TaskManagement.API.DataLayer.Entities.TMTask", null)
                        .WithMany("Comments")
                        .HasForeignKey("TMTaskId");
                });

            modelBuilder.Entity("TaskManagement.API.DataLayer.Entities.TMTask", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
